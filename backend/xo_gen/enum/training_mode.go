// Code generated by xo. DO NOT EDIT.

package enum

import (
	"database/sql/driver"
	"errors"
	"io"
)

type TrainingMode uint16

const (
	TrainingModePhysical TrainingMode = iota

	TrainingModeVirtual TrainingMode = iota

	TrainingModeOnline TrainingMode = iota
)

func (tm TrainingMode) String() string {
	var value string

	switch tm {

	case TrainingModePhysical:
		value = "physical"

	case TrainingModeVirtual:
		value = "virtual"

	case TrainingModeOnline:
		value = "online"

	}

	return value
}

func (tm TrainingMode) GoString() string {
	return tm.String()
}

// MarshalGQL implements the graphql.Marshaler interface
func (tm TrainingMode) MarshalGQL(w io.Writer) {
	w.Write([]byte(`"` + tm.String() + `"`))
}

// UnmarshalGQL implements the graphql.Marshaler interface
func (tm *TrainingMode) UnmarshalGQL(v interface{}) error {
	if str, ok := v.(string); ok {
		return tm.UnmarshalText([]byte(str))
	}
	return errors.New("ErrInvalidEnumGraphQL")
}

// MarshalText marshals TrainingMode into text.
func (tm TrainingMode) MarshalText() ([]byte, error) {
	return []byte(tm.String()), nil
}

// UnmarshalText unmarshals TrainingMode from text.
func (tm *TrainingMode) UnmarshalText(text []byte) error {
	switch string(text) {
	case "physical":
		*tm = TrainingModePhysical

	case "virtual":
		*tm = TrainingModeVirtual

	case "online":
		*tm = TrainingModeOnline

	default:
		return errors.New("ErrInvalidEnumGraphQL_TrainingMode")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for TrainingMode.
func (tm TrainingMode) Value() (driver.Value, error) {
	return tm.String(), nil
}

// Value satisfies the sql/driver.Valuer interface for TrainingMode.
func (tm TrainingMode) Ptr() *TrainingMode {
	return &tm
}

// Scan satisfies the database/sql.Scanner interface for TrainingMode.
func (tm *TrainingMode) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("ErrInvalidEnumScan_TrainingMode")
	}

	return tm.UnmarshalText(buf)
}
