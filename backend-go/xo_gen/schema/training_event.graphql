# Code generated by xo. DO NOT EDIT.

type TrainingEvent {
    id: Int !
    fkTraining: Int !
    status:  TrainingEventStatus !
    from: Datetime !
    completedOn: Datetime !
    duration: NullInt64 
    active: Boolean !
    createdAt: NullTime 
    updatedAt: NullTime 
    createdBy: NullInt64 


    trainingByFkTraining(filter: TrainingFilter): Training
    userByCreatedBy(filter: UserFilter): User



    attendancesByFkTrainingEvent(filter: AttendancesFilter, pagination: Pagination): ListAttendances!
    trainerTrainingMappingByFkTrainingEvent(filter: TrainerTrainingMappingFilter, pagination: Pagination): ListTrainerTrainingMapping!
}
input TrainingEventFilter {
    id: FilterOnField
    fkTraining: FilterOnField
    status: FilterOnField
    from: FilterOnField
    completedOn: FilterOnField
    duration: FilterOnField
    active: FilterOnField
    createdAt: FilterOnField
    updatedAt: FilterOnField
    createdBy: FilterOnField
}

input TrainingEventCreate {
    fkTraining: Int !
    status:  TrainingEventStatus !
    from: Datetime !
    completedOn: Datetime !
    duration: NullInt64 
    createdBy: NullInt64 
}

input TrainingEventUpdate {
    fkTraining: Int 
    status:  TrainingEventStatus 
    from: Datetime 
    completedOn: Datetime 
    duration: NullInt64 
    active: Boolean 
    createdBy: NullInt64 

}

type ListTrainingEvent {
    totalCount: Int!
    data: [TrainingEvent!]!
}
