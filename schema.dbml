// Use DBML to define your database structure
// Docs: https://www.dbml.org/docs


Table users {
  id int [primary key]
  username string
  email string
  password string
  role user_type
  active bool
  created_at timestamp
  updated_at timestamp
}


Table training {
  id int [primary key]
  training_name string 
  mode training_mode
  type training_type
  requested_by int
  is_registration_required bool
  tags string
  active bool
  created_at timestamp
  updated_at timestamp
  created_by int
}

Ref: training.requested_by > users.id 
Ref: training.created_by > users.id 


Table student {
  id int [primary key]
  uuid string
  full_name string
  email string
  phone_number string
  class_name string
  designation string
  active bool
  created_at timestamp
  updated_at timestamp
  created_by int
}

Ref: student.created_by > users.id 


Table trainer {
  id int [primary key]
  uuid string
  full_name string
  email string
  phone_number string 
  designation string
  active bool
  created_at timestamp
  updated_at timestamp
  created_by int
}

Ref: trainer.created_by > users.id 


Table trainer_training_mapping {
  id int [primary key]
  fk_training_event int
  fk_trainer int
  fk_student int
  active bool
  created_at timestamp
  updated_at timestamp
}

Ref: trainer_training_mapping.fk_training_event > training_event.id
Ref: trainer_training_mapping.fk_trainer > trainer.id
Ref: trainer_training_mapping.fk_student > student.id

Table attendance {
  id int [primary key]
  fk_student int
  fk_training_event int
  active bool
  created_at timestamp
  updated_at timestamp
}
Ref: attendance.fk_student > student.id
Ref: attendance.fk_training_event > training_event.id


Table registration {
  id int [primary key]
  fk_student int
  fk_training int
  active bool
  created_at timestamp
  updated_at timestamp
}
Ref: registration.fk_student > student.id
Ref: registration.fk_training > training.id


Table training_event {
  id int [primary key]
  fk_training int
  status training_status
  from timestamp
  completed_on timestamp
  duration timestamp
  active bool
  created_at timestamp
  updated_at timestamp
  created_by int
}

Ref: training_event.fk_training > training.id
Ref: training_event.created_by > users.id 


enum training_type {
  project_base
  organization_base
  self_training
}

enum training_mode {
  physical
  virtual
  online
}

enum training_status {
  completed
  pending 
  canceled
  postponed
  rejected 
}

// enum belonged to default "public" schema
enum user_type {
  admin [note: 'Waiting to be processed']
  requester
}
